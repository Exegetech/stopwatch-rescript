// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as Timer from "./components/Timer.bs.mjs";
import * as React from "react";
import * as Controls from "./components/Controls.bs.mjs";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as JsxRuntime from "react/jsx-runtime";

function App(props) {
  var match = React.useState(function () {
        return false;
      });
  var setIsActive = match[1];
  var isActive = match[0];
  var match$1 = React.useState(function () {
        return true;
      });
  var setIsPaused = match$1[1];
  var isPaused = match$1[0];
  var match$2 = React.useState(function () {
        return 0;
      });
  var setTime = match$2[1];
  React.useEffect((function () {
          var interval = {
            contents: undefined
          };
          var exit = 0;
          if (isActive && !isPaused) {
            var id = setInterval((function (param) {
                    Curry._1(setTime, (function (time) {
                            return time + 10 | 0;
                          }));
                  }), 10);
            interval.contents = Caml_option.some(id);
          } else {
            exit = 1;
          }
          if (exit === 1) {
            var interval$1 = interval.contents;
            if (interval$1 !== undefined) {
              clearInterval(Caml_option.valFromOption(interval$1));
            }
            
          }
          return (function (param) {
                    var interval$2 = interval.contents;
                    if (interval$2 !== undefined) {
                      clearInterval(Caml_option.valFromOption(interval$2));
                      return ;
                    }
                    
                  });
        }), [
        isActive,
        isPaused
      ]);
  var handleStart = function (_e) {
    Curry._1(setIsActive, (function (_prev) {
            return true;
          }));
    Curry._1(setIsPaused, (function (_prev) {
            return false;
          }));
  };
  var handlePauseResume = function (_e) {
    Curry._1(setIsPaused, (function (_prev) {
            return !isPaused;
          }));
  };
  var handleReset = function (_e) {
    Curry._1(setIsActive, (function (_prev) {
            return false;
          }));
    Curry._1(setTime, (function (_prev) {
            return 0;
          }));
  };
  return JsxRuntime.jsx("div", {
              children: JsxRuntime.jsxs("div", {
                    children: [
                      JsxRuntime.jsx(Timer.make, {
                            time: match$2[0]
                          }),
                      JsxRuntime.jsx(Controls.make, {
                            isActive: isActive,
                            isPaused: isPaused,
                            onStartClick: handleStart,
                            onResetClick: handleReset,
                            onPauseResumeClick: handlePauseResume
                          })
                    ],
                    className: "\n      h-80\n      bg-red-500\n      rounded-xl\n      text-white\n      flex\n      flex-col \n      justify-between\n      p-8\n    "
                  }),
              className: "\n    mt-32\n    container\n    mx-auto\n    flex\n    flex-row\n    justify-center\n  "
            });
}

var make = App;

export {
  make ,
}
/* Timer Not a pure module */
